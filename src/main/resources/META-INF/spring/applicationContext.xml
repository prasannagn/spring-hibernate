<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	">

	<context:component-scan base-package="com.app.transaction" />
	<context:component-scan base-package="com.app.dao" />
	<context:component-scan base-package="com.app.ws" />

	<!-- ************************************** DAO Beans ************************************** -->
	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:system/admin@localhost:1521:XE" />
		<property name="username" value="system" />
		<property name="password" value="admin" />
	</bean>
	<bean id="memberDao" class="com.app.dao.MemberDao" />
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource"></property>
		<property name="mappingResources">
			<list>
				<value>META-INF/hibernate/member.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
			</props>
		</property>
	</bean>


	<!-- ************************************** AOP Beans ************************************** -->
	<aop:aspectj-autoproxy />
	<bean id="loggingAspect" class="com.app.aop.LoggingAspect" />

	<!-- ************************************** Transaction Beans ************************************** -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<aop:config>
		<aop:pointcut id="transactionOperation"
			expression="execution(* com.app.transaction.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionOperation" />
	</aop:config>
	<!-- similarly, don't forget the PlatformTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myDataSource" />
	</bean>
	
	<!-- <bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->

	<bean id="myTransaction" class="com.app.transaction.MyTransaction" />

	<!-- ************************************** Webservice************************************** -->

	<bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory" />

	<bean id="webServiceTemplate" class="org.springframework.ws.client.core.WebServiceTemplate">
		<constructor-arg ref="messageFactory" />
		<property name="marshaller" ref="marshaller" />
		<property name="unmarshaller" ref="marshaller" />
	</bean>

	<bean id="webServiceClient" class="com.app.ws.WebServiceClient">
		<property name="defaultUri"
			value="http://localhost:8090/holidayService/holidayService/" />
	</bean>

	<!-- <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> 
		<property name="contextPath" value="com.app.domain.schemas" /> <property 
		name="schema" value="/WEB-INF/hr.xsd" /> </bean> -->
	<bean id="marshaller" class="org.springframework.oxm.castor.CastorMarshaller" />

</beans>